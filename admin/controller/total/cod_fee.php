<?php 
/*
 * This file is part of CashOnDeliveryFee-v2.0.1.1.zip.
 *
 * (c) Rich Software <opencart@rich-software.eu>
 *
 * For the full copyright and license information, please view the LICENSE.txt
 * file that was distributed with this source code.
 *
 * Do not edit this file. Check http://www.opencart-extensions.net/order-totals/cod-fee for updates.
 */
?><?php
class ControllerTotalCodfee extends Controller { private $error = array(); public function index() { $this->load->language('total/cod_fee'); $this->document->setTitle($this->language->get('heading_title')); $this->load->model('setting/setting'); if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validate()) { $this->model_setting_setting->editSetting('cod_fee', $this->request->post); $this->session->data['success'] = $this->language->get('text_success'); $this->response->redirect($this->url->link('extension/total', 'token=' . $this->session->data['token'], 'SSL')); } $data['heading_title'] = $this->language->get('heading_title'); $data['text_edit'] = $this->language->get('text_edit'); $data['text_enabled'] = $this->language->get('text_enabled'); $data['text_disabled'] = $this->language->get('text_disabled'); $data['text_none'] = $this->language->get('text_none'); $data['entry_total'] = $this->language->get('entry_total'); $data['entry_fee'] = $this->language->get('entry_fee'); $data['entry_tax_class'] = $this->language->get('entry_tax_class'); $data['entry_status'] = $this->language->get('entry_status'); $data['entry_sort_order'] = $this->language->get('entry_sort_order'); $data['help_total'] = $this->language->get('help_total'); $data['help_fee'] = $this->language->get('help_fee'); $data['button_save'] = $this->language->get('button_save'); $data['button_cancel'] = $this->language->get('button_cancel'); if (isset($this->error['warning'])) { $data['error_warning'] = $this->error['warning']; } else { $data['error_warning'] = ''; } $data['breadcrumbs'] = array(); $data['breadcrumbs'][] = array( 'text' => $this->language->get('text_home'), 'href' => $this->url->link('common/dashboard', 'token=' . $this->session->data['token'], 'SSL') ); $data['breadcrumbs'][] = array( 'text' => $this->language->get('text_total'), 'href' => $this->url->link('extension/total', 'token=' . $this->session->data['token'], 'SSL') ); $data['breadcrumbs'][] = array( 'text' => $this->language->get('heading_title'), 'href' => $this->url->link('total/cod_fee', 'token=' . $this->session->data['token'], 'SSL') ); $data['action'] = $this->url->link('total/cod_fee', 'token=' . $this->session->data['token'], 'SSL'); $data['cancel'] = $this->url->link('extension/total', 'token=' . $this->session->data['token'], 'SSL'); if (isset($this->request->post['cod_fee_total'])) { $data['cod_fee_total'] = $this->request->post['cod_fee_total']; } else { $data['cod_fee_total'] = $this->config->get('cod_fee_total'); } if (isset($this->request->post['cod_fee_fee'])) { $data['cod_fee_fee'] = $this->request->post['cod_fee_fee']; } else { $data['cod_fee_fee'] = $this->config->get('cod_fee_fee'); } if (isset($this->request->post['cod_fee_tax_class_id'])) { $data['cod_fee_tax_class_id'] = $this->request->post['cod_fee_tax_class_id']; } else { $data['cod_fee_tax_class_id'] = $this->config->get('cod_fee_tax_class_id'); } $this->load->model('localisation/tax_class'); $data['tax_classes'] = $this->model_localisation_tax_class->getTaxClasses(); if (isset($this->request->post['cod_fee_status'])) { $data['cod_fee_status'] = $this->request->post['cod_fee_status']; } else { $data['cod_fee_status'] = $this->config->get('cod_fee_status'); } if (isset($this->request->post['cod_fee_sort_order'])) { $data['cod_fee_sort_order'] = $this->request->post['cod_fee_sort_order']; } else { $data['cod_fee_sort_order'] = $this->config->get('cod_fee_sort_order'); } $data['header'] = $this->load->controller('common/header'); $data['column_left'] = $this->load->controller('common/column_left'); $data['footer'] = $this->load->controller('common/footer'); $this->response->setOutput($this->load->view('total/cod_fee.tpl', $data)); } protected function validate() { if (!$this->user->hasPermission('modify', 'total/cod_fee')) { $this->error['warning'] = $this->language->get('error_permission'); } return !$this->error; } }